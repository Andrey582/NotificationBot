/*
 * This file is generated by jOOQ.
 */

package edu.java.database.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String linkUrl;
    private OffsetDateTime lastCheckTime;

    public Link() {}

    public Link(Link value) {
        this.id = value.id;
        this.linkUrl = value.linkUrl;
        this.lastCheckTime = value.lastCheckTime;
    }

    @ConstructorProperties({ "id", "linkUrl", "lastCheckTime" })
    public Link(
        @Nullable Long id,
        @NotNull String linkUrl,
        @NotNull OffsetDateTime lastCheckTime
    ) {
        this.id = id;
        this.linkUrl = linkUrl;
        this.lastCheckTime = lastCheckTime;
    }

    /**
     * Getter for <code>LINK.ID</code>.
     */
    @Nullable
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>LINK.ID</code>.
     */
    public void setId(@Nullable Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>LINK.LINK_URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getLinkUrl() {
        return this.linkUrl;
    }

    /**
     * Setter for <code>LINK.LINK_URL</code>.
     */
    public void setLinkUrl(@NotNull String linkUrl) {
        this.linkUrl = linkUrl;
    }

    /**
     * Getter for <code>LINK.LAST_CHECK_TIME</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getLastCheckTime() {
        return this.lastCheckTime;
    }

    /**
     * Setter for <code>LINK.LAST_CHECK_TIME</code>.
     */
    public void setLastCheckTime(@NotNull OffsetDateTime lastCheckTime) {
        this.lastCheckTime = lastCheckTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Link other = (Link) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.linkUrl == null) {
            if (other.linkUrl != null)
                return false;
        }
        else if (!this.linkUrl.equals(other.linkUrl))
            return false;
        if (this.lastCheckTime == null) {
            if (other.lastCheckTime != null)
                return false;
        }
        else if (!this.lastCheckTime.equals(other.lastCheckTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.linkUrl == null) ? 0 : this.linkUrl.hashCode());
        result = prime * result + ((this.lastCheckTime == null) ? 0 : this.lastCheckTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(id);
        sb.append(", ").append(linkUrl);
        sb.append(", ").append(lastCheckTime);

        sb.append(")");
        return sb.toString();
    }
}
